srv:
  questions:
  - srv
  - srv ?
  references:
  - srv-address
srv-address:
  questions:
  - What is srv address ?
  - What is srv uri ?
  answers:
  - TODO
projections:
  questions:
  - How to add projection ?
  references:
  - projections-java
projections-java:
  questions:
  - How to add projection in java ?
  answers:  |

    import com.mongodb.client.model.Projections;
    import org.bson.conversions.Bson;

    Bson projection = Projections.include("title");
    List<Document> movies = new ArrayList<>();
    moviesCollection
                .find(queryFilter)
                .projection(projection)
                .iterator()
                .forEachRemaining(movies::add);

  links:
  - https://docs.mongodb.com/manual/tutorial/project-fields-from-query-results/
cursor-methods-appended-order:
  questions:
  - Does order how cursor methods are appended is important ?
  - Does the order of appending cursor methods impact results ?
  references:
  - cursor-methods-appended-order-aggregates
  - cursor-methods-appended-order-find
cursor-methods-appended-order-aggregates:
  questions:
  - Does order how cursor methods are appended in aggregation stages is important ?
  - Does the order of appending cursor methods in aggregation stages impact results ?
  answers: "Yes"
cursor-methods-appended-order-find:
  questions:
    - Does order how cursor methods are appended in find operation is important ?
    - Does order how cursor methods are appended in find iterable is important ?
    - Does the order of appending cursor methods in find operation impact results ?
    - Does the order of appending cursor methods in find iterable impact results ?
  answers: "No"
upsert-what-is-it:
  questions:
    - What is upsert operation ?
  answers:  |
    The upsert feature is situation when we try to update object but in case when object does not exists it is being inserted.
    This feature is not only limited for mongodb. The lion share of SQL databases have also such feture.
  links:
    - https://docs.mongodb.com/manual/reference/method/db.collection.update/#update-upsert
lookup-what-is-it:
  questions:
    - What is lookup ?
  answers:  |
    It is aggreagtion stage which fetch results from other unshared collection to result output.
    Performs a left outer join to an unsharded collection in the same database to filter in documents from the “joined” collection for processing.
    Examples:
    //java
        public Post findAndFetchComments(ObjectId oid) {

            List<Bson> pipeline = new ArrayList<Bson>();
            pipeline.add(Aggregates.match(Filters.eq("_id", oid)));
            pipeline.add(Aggregates.lookup(DaoProperties.COMMENTS_COLLECTION_NAME, "_id", COMMENTS_POSTS_ID_COLLUMN_NAME, "comments"));

            AggregateIterable<Post> results = collection.aggregate(pipeline);
            return results.first();
        }

        public Document getMovie(String movieId) {
            if (!validIdValue(movieId)) {
                return null;
            }


            AggregateIterable<Document> results = moviesCollection.aggregate(Arrays.asList(new Document("$match",
                            new Document("_id",
                                    new ObjectId(movieId))),
                    new Document("$lookup",
                            new Document("from", "comments")
                                    .append("let",
                                            new Document("m_id", "$_id"))
                                    .append("pipeline", Arrays.asList(new Document("$match",
                                                    new Document("$expr",
                                                            new Document("$eq", Arrays.asList("$movie_id", "$$m_id")))),
                                            new Document("$sort",
                                                    new Document("date", -1L))))
                                    .append("as", "comments"))));

            Document movie = results.first();
            return movie;
        }
  links:
    - https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/
recoverable-exceptions:
  questions:
    - Which exceptions should be considered recoverable ?
    - After which exception we should retry the operation ?
  answers:  |
    com.mongodb.MongoTimeoutException

  links:
    - https://mongodb.github.io/mongo-java-driver/3.7/javadoc/com/mongodb/MongoTimeoutException.html